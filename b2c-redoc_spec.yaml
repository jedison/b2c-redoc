openapi: 3.0.1
info:
  title: B2C Documentation
  version: v2
  contact:
    name: API Support
    email: supportapi@crscreditapi.com
    url: https://efx-dev.stitchcredit.com/api
  description: |
      <span class="docs-time">Last updated: 2021-11-30</span></h1>
      <p>This guide is to assist you in integrating the Consumer Credit API into your environment.</p>

  x-logo:
    url: 'https://user-images.githubusercontent.com/91110885/155860515-f3c84817-628e-427a-9b1c-abf7a735f05a.png'
    altText: CRS logo

servers:
  - url: https://efx-dev.stitchcredit.com/api
    description: Development Server URL

paths:
  /customers/users:
    get:
      tags:
        - customer-controller
      operationId: searchCustomerUsers
      parameters:
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 40
        - name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageableResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
        - customer-controller
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUserReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerUserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/hosts:
    get:
      tags:
        - customer-controller
      operationId: getCustomerHosts
      parameters:
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 40
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DetailedHostEntry'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
        - customer-controller
      operationId: updateCustomerHost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerHostReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerHostRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin:
    put:
      tags:
        - admin-controller
      operationId: updateAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - admin-controller
      operationId: createAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/users:
    get:
      tags:
        - admin-controller
      operationId: searchUsers
      parameters:
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 40
        - name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageableResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
        - admin-controller
      operationId: updateUser_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminUserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/hosts:
    put:
      tags:
        - admin-controller
      operationId: updateCustomerHost_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCustomerHostReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminCustomerHostRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - admin-controller
      operationId: createCustomerHost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCustomerHostReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminCustomerHostRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/customers:
    get:
      tags:
        - admin-controller
      operationId: getCustomers
      parameters:
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 40
        - name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageableResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
        - admin-controller
      operationId: updateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCustomerReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - admin-controller
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCustomerReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /users/verify-quiz:
    post:
      tags:
        - user-controller
      operationId: verifyIdentityQuiz
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityQuizReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/verify-code:
    post:
      tags:
        - user-controller
      operationId: verifyMobileCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserOtpReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/send-code/{token}:
    post:
      tags:
        - user-controller
      operationId: sendMobileCode
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserOtpRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/renew-code:
    post:
      tags:
        - user-controller
      operationId: renewMobileCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRenewOtpReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserOtpRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/register:
    post:
      tags:
        - user-controller
      operationId: registerUser
      parameters:
        - name: referer
          in: header
          required: false
          schema:
            type: string
        - name: ctoken
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserLoginRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /users/recovery-token:
    post:
      tags:
        - user-controller
      operationId: recoveryQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActionTokenRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /users/password-reset:
    post:
      tags:
        - user-controller
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetReqDTO'
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /users/password-recovery:
    post:
      tags:
        - user-controller
      operationId: recoverPassword
      parameters:
        - name: referer
          in: header
          required: false
          schema:
            type: string
        - name: ctoken
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordRecoveryReqDTO'
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /users/login:
    post:
      tags:
        - user-controller
      operationId: loginUser
      parameters:
        - name: referer
          in: header
          required: false
          schema:
            type: string
        - name: ctoken
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserLoginRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /users/identity:
    post:
      tags:
        - user-controller
      operationId: setIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/close-account:
    post:
      tags:
        - user-controller
      operationId: closeUserAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseAccountReqDTO'
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/change-recovery:
    post:
      tags:
        - user-controller
      operationId: changeRecovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeRecoveryReqDTO'
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/change-password:
    post:
      tags:
        - user-controller
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordReqDTO'
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/change-notifications:
    post:
      tags:
        - user-controller
      operationId: changeNotifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationsPref'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      deprecated: true
      security:
        - accessToken: []
  /users/change-email:
    post:
      tags:
        - user-controller
      operationId: changeUserEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailReqDTO'
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/action-token:
    post:
      tags:
        - user-controller
      operationId: getActionToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActionTokenRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /test/webhook/sink:
    post:
      tags:
        - test-controller
      operationId: webhookSink
      parameters:
        - name: fail
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Webhook'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /test/webhook/send/{id}:
    post:
      tags:
        - test-controller
      operationId: webhookTest
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACCNEW
              - IDFAIL
              - IDSVCOUT
              - ACCREG
              - ACCREGFAIL
              - ACCCLOSED
              - ACCLOCKED
              - ACCLOGINFAIL
              - ACCALERT
              - SCOREREF
              - REPORTREF
              - TEST
              - ERROR
        - name: error
          in: query
          required: false
          schema:
            type: string
            default: ''
        - name: count
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertReqDTO'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /rqueue/api/v1/view-data:
    post:
      tags:
        - rqueue-rest-controller
      operationId: viewData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateViewRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataViewResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /rqueue/api/v1/queue-data:
    post:
      tags:
        - rqueue-rest-controller
      operationId: exploreQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueueExploreRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataViewResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /rqueue/api/v1/pause-unpause-queue:
    post:
      tags:
        - rqueue-rest-controller
      operationId: pauseUnpauseQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseUnpauseQueueRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /rqueue/api/v1/move-data:
    post:
      tags:
        - rqueue-rest-controller
      operationId: dataType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageMoveRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageMoveResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /rqueue/api/v1/delete-queue:
    post:
      tags:
        - rqueue-rest-controller
      operationId: deleteQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTypeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /rqueue/api/v1/delete-queue-part:
    post:
      tags:
        - rqueue-rest-controller
      operationId: deleteAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataDeleteRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /rqueue/api/v1/delete-message:
    post:
      tags:
        - rqueue-rest-controller
      operationId: deleteMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageDeleteRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /rqueue/api/v1/data-type:
    post:
      tags:
        - rqueue-rest-controller
      operationId: dataType_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTypeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /rqueue/api/v1/chart:
    post:
      tags:
        - rqueue-rest-controller
      operationId: getDashboardData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartDataRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChartDataResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /direct/user-reg:
    post:
      tags:
        - direct-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectUserRegReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PreauthTokenDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /direct/update-refresh/{id}:
    post:
      tags:
        - direct-controller
      operationId: updateRefresh
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: rmonly
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /direct/register:
    post:
      tags:
        - direct-controller
      operationId: registerOld
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectUserRegReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserLoginRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Deprecated Method - use /user-reg
          content:
            '*/*':
              schema:
                type: object
      deprecated: true
      security:
        - accessToken: []
  /direct/login:
    post:
      tags:
        - direct-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectLoginReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /direct/close-account/{id}:
    post:
      tags:
        - direct-controller
      operationId: closeAccount
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /direct/change-mobile/{id}:
    post:
      tags:
        - direct-controller
      operationId: changeMobile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectChangeMobileReqDTO'
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /direct/change-host/{id}:
    post:
      tags:
        - direct-controller
      operationId: changeHost
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: host
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /direct/change-email/{id}:
    post:
      tags:
        - direct-controller
      operationId: changeEmail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectChangeEmailReqDTO'
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /customers/users/{id}/unenroll:
    post:
      tags:
        - customer-controller
      operationId: unenrollUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerUserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/users/{id}/reset:
    post:
      tags:
        - customer-controller
      operationId: resetUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerUserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/users/{id}/repair:
    post:
      tags:
        - customer-controller
      operationId: repairUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: force
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerUserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/login:
    post:
      tags:
        - customer-controller
      operationId: login_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerLoginRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/close-account/{id}:
    post:
      tags:
        - customer-controller
      operationId: closeAccount_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /alerts:
    post:
      tags:
        - alert-controller
      operationId: newAlert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EfxAlertsReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EfxAlertsRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /alerts/updates:
    post:
      tags:
        - alert-controller
      operationId: userUpdates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EFXFeatureUpdateDTO'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /alerts/daily:
    post:
      tags:
        - alert-controller
      operationId: newAlerts
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EFXDailyAlertDTO'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/users/{id}/unenroll:
    post:
      tags:
        - admin-controller
      operationId: unenrollUser_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminUserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/users/{id}/reset:
    post:
      tags:
        - admin-controller
      operationId: resetUser_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminUserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/users/{id}/repair:
    post:
      tags:
        - admin-controller
      operationId: repairUser_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: force
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminUserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/login:
    post:
      tags:
        - admin-controller
      operationId: login_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReqDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/clear/cache:
    post:
      tags:
        - admin-controller
      operationId: clearCache
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /users:
    get:
      tags:
        - user-controller
      operationId: getUser
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/start:
    get:
      tags:
        - user-controller
      operationId: startUserSession
      parameters:
        - name: referer
          in: header
          required: false
          schema:
            type: string
        - name: key
          in: query
          required: false
          schema:
            type: string
        - name: ocf
          in: query
          required: false
          schema:
            type: string
        - name: oct
          in: query
          required: false
          schema:
            type: string
        - name: ocl
          in: query
          required: false
          schema:
            type: string
        - name: view
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RedirectView'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /users/refresh-token:
    get:
      tags:
        - user-controller
      operationId: refreshUserToken
      parameters:
        - name: token
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /users/preauth-token/{token}:
    get:
      tags:
        - user-controller
      operationId: exchangePreauthToken
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserLoginRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /users/initialize:
    get:
      tags:
        - user-controller
      operationId: initialize
      parameters:
        - name: referer
          in: header
          required: false
          schema:
            type: string
        - name: ctoken
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserConfigDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /users/initialize/{key}:
    get:
      tags:
        - user-controller
      operationId: initializeWithKey
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserConfigDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /users/get-quiz:
    get:
      tags:
        - user-controller
      operationId: getIdentityQuiz
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdentityQuizDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/get-mobile:
    get:
      tags:
        - user-controller
      operationId: getMobileAuthorization
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdentityMobileRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/efx-scores:
    get:
      tags:
        - user-controller
      operationId: getEfxScores
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditScoreAbstractScore'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      deprecated: true
      security:
        - accessToken: []
  /users/efx-score-history:
    get:
      tags:
        - user-controller
      operationId: getEfxScoreHistory
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditScoreHistoryScore'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/efx-latest-scores:
    get:
      tags:
        - user-controller
      operationId: getEfxLatestScores
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreditScoreScore'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/efx-latest-report:
    get:
      tags:
        - user-controller
      operationId: efxLatestReport
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreditReportReport'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/efx-latest-report/summary:
    get:
      tags:
        - user-controller
      operationId: efxLatestReportSummary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditReportSummaryReport'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/efx-latest-efx-score:
    get:
      tags:
        - user-controller
      operationId: getEfxLatestEFXScore
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreditScoreScore'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      deprecated: true
      security:
        - accessToken: []
  /users/efx-config:
    get:
      tags:
        - user-controller
      operationId: getEfxConfig
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EfxConfigRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /users/efx-alerts:
    get:
      tags:
        - user-controller
      operationId: getEfxAlerts
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditMonitoringAlertAbstract'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /test/preauth-token/{id}:
    get:
      tags:
        - test-controller
      operationId: preauthToken
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PreauthTokenDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /sys/version:
    get:
      tags:
        - system-controller
      operationId: version
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /sys/health:
    get:
      tags:
        - system-controller
      operationId: health
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /rqueue/api/v1/jobs:
    get:
      tags:
        - rqueue-rest-controller
      operationId: getJobs
      parameters:
        - name: message-id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataViewResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /rqueue/api/v1/aggregate-data-selector:
    get:
      tags:
        - rqueue-rest-controller
      operationId: aggregateDataCounter
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - DAILY
              - WEEKLY
              - MONTHLY
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataSelectorResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /direct/user/{id}:
    get:
      tags:
        - direct-controller
      operationId: getUser_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /direct/user-token/{id}:
    get:
      tags:
        - direct-controller
      operationId: userTokenOld
      parameters:
        - name: id
          in: path
          description: UserId to generate preauth token for
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserLoginRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Deprecated Method - use /preauth-token/{id}
          content:
            '*/*':
              schema:
                type: object
      deprecated: true
      security:
        - accessToken: []
  /direct/refresh-token:
    get:
      tags:
        - direct-controller
      operationId: refreshToken
      parameters:
        - name: token
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /direct/preauth-token/{id}:
    get:
      tags:
        - direct-controller
      operationId: preauthToken_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PreauthTokenDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /direct/efx-scores/{id}:
    get:
      tags:
        - direct-controller
      operationId: efxScores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditScoreAbstractScore'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      deprecated: true
      security:
        - accessToken: []
  /direct/efx-score-history/{id}:
    get:
      tags:
        - direct-controller
      operationId: efxScoreHistory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditScoreHistoryScore'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /direct/efx-latest-scores/{id}:
    get:
      tags:
        - direct-controller
      operationId: efxLatestScores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreditScoreScore'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /direct/efx-latest-report/{id}:
    get:
      tags:
        - direct-controller
      operationId: efxLatestReport_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreditReportReport'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /direct/efx-latest-report/{id}/summary:
    get:
      tags:
        - direct-controller
      operationId: efxLatestReportSummary_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditReportSummaryReport'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /direct/efx-latest-efx-score/{id}:
    get:
      tags:
        - direct-controller
      operationId: efxLatestEFXScore
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreditScoreScore'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      deprecated: true
      security:
        - accessToken: []
  /direct/efx-config/{id}:
    get:
      tags:
        - direct-controller
      operationId: efxConfig
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EfxConfigRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /direct/efx-alerts/{id}:
    get:
      tags:
        - direct-controller
      operationId: getEfxAlerts_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditMonitoringAlertAbstract'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /direct/efx-alert/{id}:
    get:
      tags:
        - direct-controller
      operationId: efxAlert
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AlertRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /customers:
    get:
      tags:
        - customer-controller
      operationId: getCustomer
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DetailedCustomerEntry'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/users/{id}:
    get:
      tags:
        - customer-controller
      operationId: getUserAccount
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerUserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
        - customer-controller
      operationId: removeUserAccount
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CloseRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/users/{id}/logs:
    get:
      tags:
        - customer-controller
      operationId: userLogs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 40
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageableResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/stats:
    get:
      tags:
        - customer-controller
      operationId: getCustomerStatsByPeriod
      parameters:
        - name: period
          in: query
          required: false
          schema:
            maximum: 3
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: offset
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: tz
          in: query
          required: false
          schema:
            type: string
            default: America/Los_Angeles
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerStatsRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/refresh-token:
    get:
      tags:
        - customer-controller
      operationId: refresh
      parameters:
        - name: token
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/postman/{id}:
    get:
      tags:
        - customer-controller
      operationId: getPostman
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: proto
          in: query
          required: true
          schema:
            type: string
        - name: hostname
          in: query
          required: true
          schema:
            type: string
        - name: port
          in: query
          required: true
          schema:
            type: string
        - name: base_url
          in: query
          required: true
          schema:
            type: string
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: byte
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/hosts/{id}:
    get:
      tags:
        - customer-controller
      operationId: getCustomerHost
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DetailedHostEntry'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
        - customer-controller
      operationId: closeHost
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: beforeDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CloseRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/hosts/{id}/users:
    get:
      tags:
        - customer-controller
      operationId: searchCustomerHostUsers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 40
        - name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageableResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/hosts/{id}/stats:
    get:
      tags:
        - customer-controller
      operationId: getHostStatsByPeriod
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: period
          in: query
          required: false
          schema:
            maximum: 3
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: offset
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: tz
          in: query
          required: false
          schema:
            type: string
            default: America/Los_Angeles
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HostStatsRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/hosts/{id}/billing:
    get:
      tags:
        - customer-controller
      operationId: getHostBilling
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/hosts/{id}/activeusers:
    get:
      tags:
        - customer-controller
      operationId: getActiveUsersByHost
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/hosts/billing:
    get:
      tags:
        - customer-controller
      operationId: getCustomerHostsBilling
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/billing:
    get:
      tags:
        - customer-controller
      operationId: getCustomerBilling
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /customers/activeusers:
    get:
      tags:
        - customer-controller
      operationId: getActiveUsers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/users/{id}:
    get:
      tags:
        - admin-controller
      operationId: getUser_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminUserRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
        - admin-controller
      operationId: closeUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: force
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CloseRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/users/{id}/logs:
    get:
      tags:
        - admin-controller
      operationId: userLogs_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 40
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageableResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/users/{id}/identity:
    get:
      tags:
        - admin-controller
      operationId: getUserIdentity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdentityReqDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/users/{id}/features:
    get:
      tags:
        - admin-controller
      operationId: getUserFeatures
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnrollmentFeatureResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/users/{id}/efx-config:
    get:
      tags:
        - admin-controller
      operationId: efxConfig_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EfxConfigRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
      security:
        - accessToken: []
  /admin/users/enrollment-failures:
    get:
      tags:
        - admin-controller
      operationId: getUserEnrollmentFailures
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/stats:
    get:
      tags:
        - admin-controller
      operationId: getUserStatsByPeriod
      parameters:
        - name: period
          in: query
          required: false
          schema:
            maximum: 3
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: offset
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: tz
          in: query
          required: false
          schema:
            type: string
            default: America/Los_Angeles
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserStatsRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/refresh-token:
    get:
      tags:
        - admin-controller
      operationId: refresh_1
      parameters:
        - name: token
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/postman/{id}:
    get:
      tags:
        - admin-controller
      operationId: getPostman_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: proto
          in: query
          required: true
          schema:
            type: string
        - name: hostname
          in: query
          required: true
          schema:
            type: string
        - name: port
          in: query
          required: true
          schema:
            type: string
        - name: base_url
          in: query
          required: true
          schema:
            type: string
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: byte
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/hosts/{id}:
    get:
      tags:
        - admin-controller
      operationId: getCustomerHost_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DetailedHostEntry'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
        - admin-controller
      operationId: closeHost_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: beforeDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CloseRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/hosts/{id}/users:
    get:
      tags:
        - admin-controller
      operationId: searchHostUsers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 40
        - name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageableResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/hosts/{id}/stats:
    get:
      tags:
        - admin-controller
      operationId: getHostStatsByPeriod_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: period
          in: query
          required: false
          schema:
            maximum: 3
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: offset
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: tz
          in: query
          required: false
          schema:
            type: string
            default: America/Los_Angeles
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HostStatsRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/hosts/{id}/billing:
    get:
      tags:
        - admin-controller
      operationId: getHostBilling_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/hosts/{id}/activeusers:
    get:
      tags:
        - admin-controller
      operationId: getActiveUsersByHost_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/customers/{id}:
    get:
      tags:
        - admin-controller
      operationId: getCustomer_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DetailedCustomerEntry'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
        - admin-controller
      operationId: closeCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: beforeDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CloseRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/customers/{id}/stats:
    get:
      tags:
        - admin-controller
      operationId: getCustomerStatsByPeriod_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: period
          in: query
          required: false
          schema:
            maximum: 3
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: offset
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: tz
          in: query
          required: false
          schema:
            type: string
            default: America/Los_Angeles
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerStatsRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/customers/{id}/hosts:
    get:
      tags:
        - admin-controller
      operationId: getCustomerHosts_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DetailedHostEntry'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/customers/{id}/hosts/billing:
    get:
      tags:
        - admin-controller
      operationId: getCustomerHostsBilling_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/customers/{id}/billing:
    get:
      tags:
        - admin-controller
      operationId: getCustomerBilling_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/customers/{id}/activeusers:
    get:
      tags:
        - admin-controller
      operationId: getActiveUsersByCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/customers/{id}/activeStats:
    get:
      tags:
        - admin-controller
      operationId: getCustomerActiveStats
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActiveUserStatsEntry'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/customers/billing:
    get:
      tags:
        - admin-controller
      operationId: getCustomersBilling
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 40
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/admins:
    get:
      tags:
        - admin-controller
      operationId: getAdmins
      parameters:
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 40
        - name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageableResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/activeStats:
    get:
      tags:
        - admin-controller
      operationId: getActiveStats
      parameters:
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 40
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageableResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/:
    get:
      tags:
        - admin-controller
      operationId: getAdmin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /admin/{id}:
    get:
      tags:
        - admin-controller
      operationId: getAdmin_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminRespDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
  /error:
    get:
      tags:
        - error-controller
      operationId: handleError_2
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
        - error-controller
      operationId: handleError_5
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - error-controller
      operationId: handleError_3
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
        - error-controller
      operationId: handleError_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    options:
      tags:
        - error-controller
      operationId: handleError_6
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    head:
      tags:
        - error-controller
      operationId: handleError_4
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
    patch:
      tags:
        - error-controller
      operationId: handleError
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StitchErrorResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    StitchErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        codes:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        details:
          type: array
          items:
            type: string
    CustomerUserReqDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        hostId:
          type: string
          format: uuid
        email:
          type: string
        mobile:
          type: string
        fname:
          type: string
        lname:
          type: string
        active:
          type: boolean
    CustomerUserRespDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        hostId:
          type: string
          format: uuid
        email:
          type: string
        mobile:
          type: string
        fname:
          type: string
        lname:
          type: string
        enrollmentId:
          type: string
        flags:
          type: integer
          format: int32
        hasPassword:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        active:
          type: boolean
    CustomerHostReqDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        host:
          type: string
        theme:
          type: string
        logo:
          type: string
        successUrl:
          type: string
        failureUrl:
          type: string
        hook:
          type: string
        hookUser:
          type: string
        hookPass:
          type: string
        hookActive:
          type: boolean
        active:
          type: boolean
    CustomerHostRespDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        customerId:
          type: string
          format: uuid
        secret:
          type: string
          format: uuid
        key:
          type: string
          format: uuid
        name:
          type: string
        customerName:
          type: string
        host:
          type: string
        theme:
          type: string
        logo:
          type: string
        successUrl:
          type: string
        failureUrl:
          type: string
        flags:
          type: integer
          format: int32
        rate:
          type: number
          format: float
        hook:
          type: string
        hookUser:
          type: string
        hookPass:
          type: string
        hookActive:
          type: boolean
        userLimit:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        active:
          type: boolean
    AdminReqDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        name:
          type: string
        newPassword:
          type: string
        active:
          type: boolean
    AdminRespDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        active:
          type: boolean
    AdminUserReqDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        hostId:
          type: string
          format: uuid
        email:
          type: string
        mobile:
          type: string
        fname:
          type: string
        lname:
          type: string
        newPassword:
          type: string
        smsMsg:
          type: boolean
        emailMsg:
          type: boolean
        pushMsg:
          type: boolean
        active:
          type: boolean
        demo:
          type: boolean
    AdminUserRespDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        hostId:
          type: string
          format: uuid
        email:
          type: string
        mobile:
          type: string
        fname:
          type: string
        lname:
          type: string
        enrollmentId:
          type: string
        flags:
          type: integer
          format: int32
        totalAlerts:
          type: integer
          format: int32
        unreadAlerts:
          type: integer
          format: int32
        smsMsg:
          type: boolean
        emailMsg:
          type: boolean
        pushMsg:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        hasPassword:
          type: boolean
        customerName:
          type: string
        active:
          type: boolean
        demo:
          type: boolean
    AdminCustomerHostReqDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        customerId:
          type: string
          format: uuid
        host:
          type: string
        theme:
          type: string
        logo:
          type: string
        successUrl:
          type: string
        failureUrl:
          type: string
        hook:
          type: string
        hookUser:
          type: string
        hookPass:
          type: string
        hookActive:
          type: boolean
        sendEmail:
          type: boolean
        sendSMS:
          type: boolean
        userLimit:
          type: integer
          format: int32
        flags:
          type: integer
          format: int32
        rate:
          type: number
          format: float
        active:
          type: boolean
    AdminCustomerHostRespDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        customerId:
          type: string
          format: uuid
        secret:
          type: string
          format: uuid
        key:
          type: string
          format: uuid
        name:
          type: string
        customerName:
          type: string
        host:
          type: string
        theme:
          type: string
        logo:
          type: string
        successUrl:
          type: string
        failureUrl:
          type: string
        userLimit:
          type: integer
          format: int32
        flags:
          type: integer
          format: int32
        rate:
          type: number
          format: float
        hook:
          type: string
        hookUser:
          type: string
        hookPass:
          type: string
        hookActive:
          type: boolean
        sendEmail:
          type: boolean
        sendSMS:
          type: boolean
        activeUsers:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        active:
          type: boolean
    AdminCustomerReqDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        contactName:
          type: string
        contactEmail:
          type: string
        refId:
          type: string
        minRate:
          type: number
          format: float
        userLimit:
          type: integer
          format: int32
        newPassword:
          type: string
        active:
          type: boolean
        billing:
          type: boolean
    CustomerRespDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        contactName:
          type: string
        contactEmail:
          type: string
        refId:
          type: string
        userLimit:
          type: integer
          format: int32
        minRate:
          type: number
          format: float
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        active:
          type: boolean
        billing:
          type: boolean
    Answer:
      type: object
      properties:
        qid:
          type: integer
          format: int32
        aid:
          type: integer
          format: int32
    IdentityQuizReqDTO:
      required:
        - id
        - key
      type: object
      properties:
        key:
          type: string
        id:
          type: integer
          format: int32
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
    UserRespDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        fname:
          type: string
        lname:
          type: string
        idpass:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        smsMsg:
          type: boolean
        emailMsg:
          type: boolean
        pushMsg:
          type: boolean
        flags:
          type: integer
          format: int32
    UserOtpReqDTO:
      required:
        - code
        - key
      type: object
      properties:
        key:
          type: string
        code:
          type: string
    UserOtpRespDTO:
      type: object
      properties:
        key:
          type: string
        passcode:
          type: string
    UserRenewOtpReqDTO:
      required:
        - key
      type: object
      properties:
        key:
          type: string
    UserRegReqDTO:
      required:
        - email
        - fname
        - lname
        - password
        - recoveryAnswer
        - recoveryQuestion
      type: object
      properties:
        email:
          type: string
        mobile:
          maxLength: 10
          minLength: 10
          type: string
        fname:
          type: string
        lname:
          type: string
        password:
          maxLength: 20
          minLength: 8
          type: string
        recoveryQuestion:
          maximum: 10
          minimum: 1
          type: integer
          format: int32
        recoveryAnswer:
          type: string
        smsMsg:
          type: boolean
        emailMsg:
          type: boolean
        pushMsg:
          type: boolean
    UserLoginRespDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        fname:
          type: string
        lname:
          type: string
        idpass:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        smsMsg:
          type: boolean
        emailMsg:
          type: boolean
        pushMsg:
          type: boolean
        flags:
          type: integer
          format: int32
        token:
          type: string
        expires:
          type: integer
          format: int64
        refresh:
          type: string
    TokenReqDTO:
      required:
        - token
      type: object
      properties:
        token:
          type: string
    ActionTokenRespDTO:
      type: object
      properties:
        token:
          type: string
        recoveryQuestion:
          type: integer
          format: int32
    PasswordResetReqDTO:
      required:
        - password
        - recoveryAnswer
        - token
      type: object
      properties:
        token:
          type: string
        recoveryAnswer:
          type: string
        password:
          maxLength: 20
          minLength: 8
          type: string
    PasswordRecoveryReqDTO:
      required:
        - email
      type: object
      properties:
        email:
          type: string
    LoginReqDTO:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    IdentityReqDTO:
      required:
        - city
        - ssn
        - state
        - street1
        - zip
      type: object
      properties:
        dob:
          type: string
          format: date
        mobile:
          maxLength: 10
          minLength: 10
          type: string
        ssn:
          maxLength: 9
          minLength: 9
          type: string
        street1:
          type: string
        street2:
          type: string
        city:
          type: string
        state:
          maxLength: 2
          minLength: 2
          type: string
        zip:
          maxLength: 5
          minLength: 5
          type: string
        country:
          type: string
    CloseAccountReqDTO:
      required:
        - recoveryAnswer
        - token
      type: object
      properties:
        recoveryAnswer:
          type: string
        token:
          type: string
    ChangeRecoveryReqDTO:
      required:
        - oldRecoveryAnswer
        - recoveryAnswer
        - recoveryQuestion
        - token
      type: object
      properties:
        recoveryQuestion:
          maximum: 10
          minimum: 1
          type: integer
          format: int32
        recoveryAnswer:
          type: string
        oldRecoveryAnswer:
          type: string
        token:
          type: string
    ChangePasswordReqDTO:
      required:
        - newPassword
        - oldPassword
        - username
      type: object
      properties:
        username:
          type: string
        oldPassword:
          type: string
        newPassword:
          type: string
    UserNotificationsPref:
      type: object
      properties:
        smsMsg:
          type: boolean
        emailMsg:
          type: boolean
        pushMsg:
          type: boolean
    ChangeEmailReqDTO:
      required:
        - email
        - recoveryAnswer
        - token
      type: object
      properties:
        email:
          type: string
        recoveryAnswer:
          type: string
        token:
          type: string
    Webhook:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - ACCNEW
            - IDFAIL
            - IDSVCOUT
            - ACCREG
            - ACCREGFAIL
            - ACCCLOSED
            - ACCLOCKED
            - ACCLOGINFAIL
            - ACCALERT
            - SCOREREF
            - REPORTREF
            - TEST
            - ERROR
        user_id:
          type: string
          format: uuid
        host_id:
          type: string
          format: uuid
        alert_id:
          type: string
          format: uuid
        alert_date:
          type: string
          format: date-time
        alert_source:
          type: string
        time:
          type: string
          format: date-time
        error_code:
          type: string
        error_msg:
          type: string
    AlertReqDTO:
      type: object
      properties:
        enrollmentId:
          type: string
        alertId:
          type: string
        alertType:
          type: string
        creationDate:
          type: string
          format: date-time
        dataSource:
          type: string
        dateReported:
          type: string
          format: date-time
        reportingFrequency:
          type: string
        tenantKey:
          type: string
        institutionType:
          type: string
        institutionName:
          type: string
        memberNumber:
          type: string
        inquiryIntent:
          type: string
        inquiryType:
          type: string
        endUserText:
          type: string
        institutionAddressLine1:
          type: string
        institutionAddressLine2:
          type: string
        institutionCity:
          type: string
        institutionState:
          type: string
        institutionPostalCode:
          type: string
        institutionPhoneNumber:
          type: string
        customerReferenceNumber:
          type: string
        postedDuringMaintenancePeriod:
          type: boolean
    DateViewRequest:
      required:
        - name
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - NONE
            - LIST
            - ZSET
            - KEY
            - SET
        name:
          type: string
        key:
          type: string
        page:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
    Action:
      type: object
      properties:
        type:
          type: string
          enum:
            - DELETE
            - NONE
        description:
          type: string
    DataViewResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        headers:
          type: array
          items:
            type: string
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/TableRow'
    RowColumnMeta:
      type: object
      properties:
        type:
          type: string
          enum:
            - JOBS_BUTTON
        data:
          type: object
    TableColumn:
      type: object
      properties:
        type:
          type: string
          enum:
            - DISPLAY
            - ACTION
        value:
          type: object
        meta:
          type: array
          items:
            $ref: '#/components/schemas/RowColumnMeta'
    TableRow:
      type: object
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/TableColumn'
        meta:
          type: array
          items:
            $ref: '#/components/schemas/RowColumnMeta'
    QueueExploreRequest:
      required:
        - name
        - src
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - NONE
            - LIST
            - ZSET
            - KEY
            - SET
        name:
          type: string
        src:
          type: string
        page:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
    PauseUnpauseQueueRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        pause:
          type: boolean
    BaseResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    MessageMoveRequest:
      type: object
      properties:
        src:
          type: string
        srcType:
          type: string
          enum:
            - NONE
            - LIST
            - ZSET
            - KEY
            - SET
        dst:
          type: string
        dstType:
          type: string
          enum:
            - NONE
            - LIST
            - ZSET
            - KEY
            - SET
        others:
          type: object
          additionalProperties:
            type: object
    MessageMoveResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        value:
          type: boolean
        numberOfMessageTransferred:
          type: integer
          format: int32
    DataTypeRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
    DataDeleteRequest:
      required:
        - data_set
        - queue
      type: object
      properties:
        queue:
          type: string
        data_set:
          type: string
    BooleanResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        value:
          type: boolean
    MessageDeleteRequest:
      required:
        - message_id
        - queue
      type: object
      properties:
        queue:
          type: string
        message_id:
          type: string
    StringResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        val:
          type: string
    ChartDataRequest:
      type: object
      properties:
        type:
          type: string
          enum:
            - LATENCY
            - STATS
        queue:
          type: string
        number:
          type: integer
          format: int32
        aggregationType:
          type: string
          enum:
            - DAILY
            - WEEKLY
            - MONTHLY
        dateTypes:
          type: array
          items:
            type: string
            enum:
              - SUCCESSFUL
              - DISCARDED
              - MOVED_TO_DLQ
              - RETRIED
              - EXECUTION
    ChartDataResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: array
          items:
            type: array
            items:
              type: object
        title:
          type: string
        hTitle:
          type: string
        vTitle:
          type: string
    DirectUserRegReqDTO:
      required:
        - email
        - fname
        - lname
      type: object
      properties:
        email:
          type: string
        mobile:
          maxLength: 10
          minLength: 10
          type: string
        fname:
          type: string
        lname:
          type: string
        smsMsg:
          type: boolean
        emailMsg:
          type: boolean
        pushMsg:
          type: boolean
    PreauthTokenDTO:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        token:
          type: string
    DirectLoginReqDTO:
      required:
        - apikey
        - secret
      type: object
      properties:
        apikey:
          type: string
        secret:
          type: string
    LoginRespDTO:
      type: object
      properties:
        token:
          type: string
        expires:
          type: integer
          format: int64
        refresh:
          type: string
    DirectChangeMobileReqDTO:
      type: object
      properties:
        mobile:
          maxLength: 10
          minLength: 10
          type: string
    DirectChangeEmailReqDTO:
      required:
        - email
      type: object
      properties:
        email:
          type: string
    CustomerLoginRespDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        minRate:
          type: number
          format: float
        name:
          type: string
        contactName:
          type: string
        contactEmail:
          type: string
        token:
          type: string
        refresh:
          type: string
        expires:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        active:
          type: boolean
    EfxAlertsReqDTO:
      type: object
      properties:
        partnerAlertRecord:
          type: array
          items:
            $ref: '#/components/schemas/AlertReqDTO'
    EfxAlertRespDTO:
      type: object
      properties:
        alertId:
          type: string
        operationStatus:
          type: string
        operationStatusMessage:
          type: string
    EfxAlertsRespDTO:
      type: object
      properties:
        partnerAlertResponses:
          type: array
          items:
            $ref: '#/components/schemas/EfxAlertRespDTO'
    EFXFUpdateDTO:
      type: object
      properties:
        eid:
          type: string
        id:
          type: string
        doc:
          type: string
        t:
          type: string
    EFXFeatureUpdateDTO:
      type: object
      properties:
        d:
          type: string
          format: date-time
        updates:
          type: array
          items:
            $ref: '#/components/schemas/EFXFUpdateDTO'
    EFXDailyAlertDTO:
      type: object
      properties:
        eid:
          type: string
        id:
          type: string
        aid:
          type: string
        d:
          type: string
          format: date
        t:
          type: string
        s:
          type: string
    ApplicationContext:
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/ApplicationContext'
        id:
          type: string
        displayName:
          type: string
        applicationName:
          type: string
        startupDate:
          type: integer
          format: int64
        autowireCapableBeanFactory:
          $ref: '#/components/schemas/AutowireCapableBeanFactory'
        environment:
          $ref: '#/components/schemas/Environment'
        beanDefinitionNames:
          type: array
          items:
            type: string
        beanDefinitionCount:
          type: integer
          format: int32
        parentBeanFactory:
          $ref: '#/components/schemas/BeanFactory'
        classLoader:
          type: object
          properties:
            parent:
              type: object
              properties:
                name:
                  type: string
                unnamedModule:
                  type: object
                  properties:
                    layer:
                      type: object
                    name:
                      type: string
                    descriptor:
                      type: object
                      properties:
                        open:
                          type: boolean
                        automatic:
                          type: boolean
                    classLoader:
                      type: object
                      properties:
                        name:
                          type: string
                        defaultAssertionStatus:
                          type: boolean
                          writeOnly: true
                        registeredAsParallelCapable:
                          type: boolean
                        definedPackages:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              annotations:
                                type: array
                                items:
                                  type: object
                              declaredAnnotations:
                                type: array
                                items:
                                  type: object
                              sealed:
                                type: boolean
                              specificationTitle:
                                type: string
                              specificationVersion:
                                type: string
                              specificationVendor:
                                type: string
                              implementationTitle:
                                type: string
                              implementationVersion:
                                type: string
                              implementationVendor:
                                type: string
                    annotations:
                      type: array
                      items:
                        type: object
                    declaredAnnotations:
                      type: array
                      items:
                        type: object
                    named:
                      type: boolean
                    packages:
                      uniqueItems: true
                      type: array
                      items:
                        type: string
                defaultAssertionStatus:
                  type: boolean
                  writeOnly: true
                registeredAsParallelCapable:
                  type: boolean
                definedPackages:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      annotations:
                        type: array
                        items:
                          type: object
                      declaredAnnotations:
                        type: array
                        items:
                          type: object
                      sealed:
                        type: boolean
                      specificationTitle:
                        type: string
                      specificationVersion:
                        type: string
                      specificationVendor:
                        type: string
                      implementationTitle:
                        type: string
                      implementationVersion:
                        type: string
                      implementationVendor:
                        type: string
            name:
              type: string
            unnamedModule:
              type: object
              properties:
                layer:
                  type: object
                name:
                  type: string
                descriptor:
                  type: object
                  properties:
                    open:
                      type: boolean
                    automatic:
                      type: boolean
                classLoader:
                  type: object
                  properties:
                    name:
                      type: string
                    defaultAssertionStatus:
                      type: boolean
                      writeOnly: true
                    registeredAsParallelCapable:
                      type: boolean
                    definedPackages:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          annotations:
                            type: array
                            items:
                              type: object
                          declaredAnnotations:
                            type: array
                            items:
                              type: object
                          sealed:
                            type: boolean
                          specificationTitle:
                            type: string
                          specificationVersion:
                            type: string
                          specificationVendor:
                            type: string
                          implementationTitle:
                            type: string
                          implementationVersion:
                            type: string
                          implementationVendor:
                            type: string
                annotations:
                  type: array
                  items:
                    type: object
                declaredAnnotations:
                  type: array
                  items:
                    type: object
                named:
                  type: boolean
                packages:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
            defaultAssertionStatus:
              type: boolean
              writeOnly: true
            registeredAsParallelCapable:
              type: boolean
            definedPackages:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  annotations:
                    type: array
                    items:
                      type: object
                  declaredAnnotations:
                    type: array
                    items:
                      type: object
                  sealed:
                    type: boolean
                  specificationTitle:
                    type: string
                  specificationVersion:
                    type: string
                  specificationVendor:
                    type: string
                  implementationTitle:
                    type: string
                  implementationVersion:
                    type: string
                  implementationVendor:
                    type: string
    AutowireCapableBeanFactory:
      type: object
    BeanFactory:
      type: object
    Environment:
      type: object
      properties:
        activeProfiles:
          type: array
          items:
            type: string
        defaultProfiles:
          type: array
          items:
            type: string
    RedirectView:
      type: object
      properties:
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
        servletContext:
          type: object
          properties:
            classLoader:
              type: object
              properties:
                name:
                  type: string
                defaultAssertionStatus:
                  type: boolean
                  writeOnly: true
                registeredAsParallelCapable:
                  type: boolean
                definedPackages:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      annotations:
                        type: array
                        items:
                          type: object
                      declaredAnnotations:
                        type: array
                        items:
                          type: object
                      sealed:
                        type: boolean
                      specificationTitle:
                        type: string
                      specificationVersion:
                        type: string
                      specificationVendor:
                        type: string
                      implementationTitle:
                        type: string
                      implementationVersion:
                        type: string
                      implementationVendor:
                        type: string
            majorVersion:
              type: integer
              format: int32
            minorVersion:
              type: integer
              format: int32
            sessionTrackingModes:
              uniqueItems: true
              type: array
              writeOnly: true
              items:
                type: string
                enum:
                  - COOKIE
                  - URL
                  - SSL
            attributeNames:
              type: object
            contextPath:
              type: string
            initParameterNames:
              type: object
            servletNames:
              type: object
              deprecated: true
            sessionTimeout:
              type: integer
              format: int32
            effectiveMajorVersion:
              type: integer
              format: int32
            effectiveMinorVersion:
              type: integer
              format: int32
            servlets:
              type: object
              deprecated: true
            serverInfo:
              type: string
            servletContextName:
              type: string
            servletRegistrations:
              type: object
              additionalProperties:
                type: object
                properties:
                  runAsRole:
                    type: string
                  mappings:
                    type: array
                    items:
                      type: string
                  name:
                    type: string
                  className:
                    type: string
                  initParameters:
                    type: object
                    additionalProperties:
                      type: string
            filterRegistrations:
              type: object
              additionalProperties:
                type: object
                properties:
                  servletNameMappings:
                    type: array
                    items:
                      type: string
                  urlPatternMappings:
                    type: array
                    items:
                      type: string
                  name:
                    type: string
                  className:
                    type: string
                  initParameters:
                    type: object
                    additionalProperties:
                      type: string
            sessionCookieConfig:
              type: object
              properties:
                name:
                  type: string
                path:
                  type: string
                comment:
                  type: string
                domain:
                  type: string
                secure:
                  type: boolean
                maxAge:
                  type: integer
                  format: int32
                httpOnly:
                  type: boolean
            defaultSessionTrackingModes:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                  - COOKIE
                  - URL
                  - SSL
            effectiveSessionTrackingModes:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                  - COOKIE
                  - URL
                  - SSL
            jspConfigDescriptor:
              type: object
              properties:
                taglibs:
                  type: array
                  items:
                    type: object
                    properties:
                      taglibURI:
                        type: string
                      taglibLocation:
                        type: string
                jspPropertyGroups:
                  type: array
                  items:
                    type: object
                    properties:
                      buffer:
                        type: string
                      defaultContentType:
                        type: string
                      elIgnored:
                        type: string
                      pageEncoding:
                        type: string
                      scriptingInvalid:
                        type: string
                      isXml:
                        type: string
                      includePreludes:
                        type: array
                        items:
                          type: string
                      includeCodas:
                        type: array
                        items:
                          type: string
                      deferredSyntaxAllowedAsLiteral:
                        type: string
                      trimDirectiveWhitespaces:
                        type: string
                      errorOnUndeclaredNamespace:
                        type: string
                      urlPatterns:
                        type: array
                        items:
                          type: string
            virtualServerName:
              type: string
            requestCharacterEncoding:
              type: string
            responseCharacterEncoding:
              type: string
          writeOnly: true
        contentType:
          type: string
        requestContextAttribute:
          type: string
        staticAttributes:
          type: object
          additionalProperties:
            type: object
        exposePathVariables:
          type: boolean
        exposeContextBeansAsAttributes:
          type: boolean
          writeOnly: true
        exposedContextBeanNames:
          type: array
          writeOnly: true
          items:
            type: string
        beanName:
          type: string
        url:
          type: string
        contextRelative:
          type: boolean
          writeOnly: true
        http10Compatible:
          type: boolean
          writeOnly: true
        exposeModelAttributes:
          type: boolean
          writeOnly: true
        encodingScheme:
          type: string
          writeOnly: true
        statusCode:
          type: string
          writeOnly: true
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        expandUriTemplateVariables:
          type: boolean
          writeOnly: true
        propagateQueryParams:
          type: boolean
          writeOnly: true
        hosts:
          type: array
          items:
            type: string
        redirectView:
          type: boolean
        propagateQueryProperties:
          type: boolean
        attributes:
          type: object
          additionalProperties:
            type: string
          writeOnly: true
        attributesMap:
          type: object
          additionalProperties:
            type: object
        attributesCSV:
          type: string
          writeOnly: true
    UserConfigDTO:
      type: object
      properties:
        theme:
          type: string
        logo:
          type: string
        flags:
          type: integer
          format: int32
    IdentityQuizDTO:
      type: object
      properties:
        key:
          type: string
        id:
          type: integer
          format: int32
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    Question:
      type: object
      properties:
        id:
          type: integer
          format: int32
        text:
          type: string
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
    IdentityMobileRespDTO:
      type: object
      properties:
        mobile:
          type: string
        token:
          type: string
    CreditScoreAbstractScore:
      type: object
      properties:
        generatedDate:
          type: string
          format: date-time
        scoreType:
          type: string
          enum:
            - US_EFX
            - US_3B
        id:
          type: string
        creditReportId:
          type: string
    CreditScoreHistoryProviderViewScore:
      type: object
      properties:
        score:
          type: integer
          format: int32
        provider:
          type: string
          enum:
            - EFX
            - TU
            - EXP
            - UNKNOWN
    CreditScoreHistoryScore:
      type: object
      properties:
        generatedDate:
          type: string
          format: date-time
        scoreType:
          type: string
          enum:
            - US_EFX
            - US_3B
        id:
          type: string
        scoreModel:
          type: string
          enum:
            - VANTAGE
            - ERS
            - FICO
            - UNKNOWN
        providerViews:
          type: array
          items:
            $ref: '#/components/schemas/CreditScoreHistoryProviderViewScore'
    CreditScoreLoanRiskRangeScore:
      type: object
      properties:
        low:
          type: integer
          format: int32
        high:
          type: integer
          format: int32
        name:
          type: string
    CreditScoreProviderViewScore:
      type: object
      properties:
        provider:
          type: string
          enum:
            - EFX
            - TU
            - EXP
            - UNKNOWN
        score:
          type: integer
          format: int32
        scoreRanges:
          type: array
          items:
            $ref: '#/components/schemas/CreditScoreRangeScore'
        loanRiskRanges:
          type: array
          items:
            $ref: '#/components/schemas/CreditScoreLoanRiskRangeScore'
        scoreReasons:
          type: array
          items:
            $ref: '#/components/schemas/CreditScoreReasonScore'
    CreditScoreRangeScore:
      type: object
      properties:
        low:
          type: integer
          format: int32
        high:
          type: integer
          format: int32
        name:
          type: string
    CreditScoreReasonScore:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        creditScoreFactorEffect:
          type: string
          enum:
            - HELPING
            - HURTING
            - NEUTRAL
    CreditScoreScore:
      type: object
      properties:
        providerViews:
          type: array
          items:
            $ref: '#/components/schemas/CreditScoreProviderViewScore'
        id:
          type: string
        scoreType:
          type: string
          enum:
            - US_EFX
            - US_3B
        scoreModel:
          type: string
          enum:
            - VANTAGE
            - ERS
            - FICO
            - UNKNOWN
        generatedDate:
          type: string
          format: date-time
    BankruptcyReport:
      type: object
      properties:
        id:
          type: string
        filedDate:
          type: string
          format: date-time
        reportedDate:
          type: string
          format: date-time
        referenceNumber:
          type: string
        dispositionStatus:
          $ref: '#/components/schemas/CodeDescriptionReport'
        courtName:
          type: string
        liability:
          $ref: '#/components/schemas/MoneyReport'
        exemptAmount:
          $ref: '#/components/schemas/MoneyReport'
        assetAmount:
          $ref: '#/components/schemas/MoneyReport'
    CodeDescriptionReport:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    CollectionItemReport:
      type: object
      properties:
        provider:
          type: string
          enum:
            - EFX
            - TU
            - EXP
            - UNKNOWN
        id:
          type: string
        reportedDate:
          type: string
          format: date-time
        assignedDate:
          type: string
          format: date-time
        agencyClient:
          type: string
        orginalAmountOwed:
          $ref: '#/components/schemas/MoneyReport'
        accountNumber:
          type: string
        accountDesignatorCode:
          type: string
          enum:
            - AUTHORIZED_USER
            - CO_MAKER
            - DECEASED
            - INDIVIDUAL_ACCOUNT
            - JOINT_ACCOUNT
            - MAKER
            - ON_BEHALF_OF_ANOTHER_PERSON
            - SHARED
            - TERMINATED
            - UNDESIGNATED
        balanceDate:
          type: string
          format: date-time
        statusDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - CLOSED
            - FROZEN
            - OPEN
            - REFINANCED
            - TRANSFERRED
            - ACCOUNT_DISPUTED
            - ADJUSTMENT
            - CHECKED
            - FINANCIAL_COUNSELOR
            - IN_BANKRUPTCY
            - NEW_LISTING
            - OTHER
            - PAID
            - PAYMENT
            - SETTLED
            - STATUS_UNKNOWN
            - SUPPRESS_COLLECTION
            - UNPAID
            - UNSETTLED
            - WAGE_EARNER
        amount:
          $ref: '#/components/schemas/MoneyReport'
    ConsumerStatementReport:
      type: object
      properties:
        provider:
          type: string
          enum:
            - EFX
            - TU
            - EXP
            - UNKNOWN
        id:
          type: string
        reportedDate:
          type: string
          format: date-time
        statement:
          type: string
    ContactInformationReport:
      type: object
      properties:
        contactName:
          type: string
        address:
          $ref: '#/components/schemas/InternationalAddressReport'
        phone:
          $ref: '#/components/schemas/InternationalPhoneReport'
    CountryReport:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
    CreditReportAccountReport:
      type: object
      properties:
        provider:
          type: string
          enum:
            - EFX
            - TU
            - EXP
            - UNKNOWN
        id:
          type: string
        accountOpen:
          type: boolean
        accountName:
          type: string
        contactInformation:
          $ref: '#/components/schemas/ContactInformationReport'
        accountNumber:
          type: string
        accountStatus:
          type: string
          enum:
            - BANKRUPTCY_OR_WAGE_EARNER_PLAN
            - COLLECTION_OR_CHARGEOFF
            - FORECLOSURE
            - FORECLOSURE_OR_REPOSSESSION
            - LATE_30_DAYS
            - LATE_60_DAYS
            - LATE_90_DAYS
            - WAGE_EARNER_PLAN
            - TOO_NEW_TO_RATE
            - PAYS_AS_AGREED
            - NOT_MORE_THAN_TWO_PAYMENTS_PAST_DUE
            - NOT_MORE_THAN_THREE_PAYMENTS_PAST_DUE
            - NOT_MORE_THAN_FOUR_PAYMENTS_PAST_DUE
            - OVER_120_DAYS_PAST_DUE
            - COLLECTION
            - INCLUDED_IN_CHAPTER_13
            - REPOSSESSION
            - CHARGE_OFF
            - ZERO_BALANCE_AND_CURRENT_ACCOUNT
            - NO_RATE_REPORTED
            - ACCOUNT_INACTIVE
            - LOST_OR_STOLEN_CARD
            - CONTACT_MEMBER_FOR_STATUS
            - REFINANCED_OR_RENEWED
            - CONSUMER_DECEASED
            - IN_FINANCIAL_COUNSELING
            - FORECLOSURE_PROCESS_STARTED
            - IN_WEP
            - ADJUSTMENT_PENDING
            - DISPUTE_RESOLUTION_PENDING
            - INCLUDED_IN_BANKRUPTCY
            - IN_BK
            - ASSIGNED_TO_US_DEPT_OF_ED
            - UNAVAILABLE
        paymentResponsibility:
          type: string
          enum:
            - INDIVIDUAL
            - JOINT_CONTRACTUAL_LIABILITY
            - SHARED
            - UNDESIGNATED
        highCreditAmount:
          $ref: '#/components/schemas/MoneyReport'
        accountType:
          type: string
          enum:
            - REVOLVING
            - MORTGAGE
            - INSTALLMENT
            - OTHER
        creditLimitAmount:
          $ref: '#/components/schemas/MoneyReport'
        termDurationMonths:
          type: integer
          format: int32
        termFrequency:
          type: string
        dateOpened:
          type: string
          format: date-time
        balanceAmount:
          $ref: '#/components/schemas/MoneyReport'
        reportedDate:
          type: string
          format: date-time
        pastDueAmount:
          $ref: '#/components/schemas/MoneyReport'
        lastPaymentDate:
          type: string
          format: date-time
        actualPayment:
          $ref: '#/components/schemas/MoneyReport'
        monthlyPayment:
          $ref: '#/components/schemas/MoneyReport'
        lastActivityDate:
          type: string
          format: date-time
        majorDelinquencyFirstReportedDate:
          type: string
          format: date-time
        monthsReviewed:
          type: integer
          format: int32
        creditorClassification:
          type: string
          enum:
            - ADVERTISING
            - CLOTHING
            - COLLECTION_SERVICES
            - CONTRACTORS
            - DEPARTMENT_AND_MAIL_ORDER
            - EMPLOYMENT
            - FARM_AND_GARDEN_SUPPLIES
            - FINANCE
            - GROCERY
            - HOME_FURNISHING
            - JEWELRY_AND_CAMERA
            - LUMBER_AND_HARDWARE
            - MEDICAL_AND_HEALTH
            - MISCELLANEOUS_AND_PUBLIC_RECORD
            - OIL_AND_NATIONAL_CREDIT_CARDS
            - PERSONAL_SERVICES_NOT_MEDICAL
            - REAL_ESTATE_AND_PUBLIC_ACCOMMODATION
            - SPORTING_GOODS
            - UTILITIES_AND_FUEL
            - WHOLESALE
            - AUTOMOTIVE
            - BANKING
            - CABLE_OR_CELLULAR
            - CHECK_GUARANTEE
            - CREDIT_UNION
            - EDUCATIONAL
            - FINANCIAL
            - GOVERNMENT
            - INSURANCE
            - MEDICAL_OR_HEALTH_CARE
            - OIL_COMPANY
            - PERSONAL_SERVICES
            - RENTAL_OR_LEASING
            - RETAIL
            - UTILITIES
            - UNKNOWN
        activityDesignator:
          type: string
          enum:
            - CLOSED
            - DEFAULT
            - FROZEN
            - LOST_OR_STOLEN
            - OPEN
            - PAID
            - PAID_AND_CLOSED
            - REFINANCED
            - TRANSFER_OR_SOLD
            - TRANSFER_OR_SOLD_OR_PAID
            - TRANSFERRED
            - UNKNOWN
        chargeOffAmount:
          $ref: '#/components/schemas/MoneyReport'
        deferredPaymentStartDate:
          type: string
          format: date-time
        balloonPaymentAmount:
          $ref: '#/components/schemas/MoneyReport'
        balloonPaymentDate:
          type: string
          format: date-time
        dateClosed:
          type: string
          format: date-time
        loanType:
          $ref: '#/components/schemas/CodeDescriptionReport'
        firstDelinquencyDate:
          type: string
          format: date-time
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CodeDescriptionReport'
        paymentHistory:
          type: array
          items:
            $ref: '#/components/schemas/PaymentHistoryYearReport'
        trendedDataHistory:
          $ref: '#/components/schemas/TrendedDataHistoryReport'
        isNegative:
          type: boolean
    CreditReportProviderDisputeInformationReport:
      type: object
      properties:
        contactName:
          type: string
        address:
          $ref: '#/components/schemas/InternationalAddressReport'
        phone:
          $ref: '#/components/schemas/InternationalPhoneReport'
    CreditReportProviderViewReport:
      type: object
      properties:
        provider:
          type: string
          enum:
            - EFX
            - TU
            - EXP
            - UNKNOWN
        summary:
          $ref: '#/components/schemas/CreditReportSummaryReport'
        revolvingAccounts:
          type: array
          items:
            $ref: '#/components/schemas/CreditReportAccountReport'
        mortgageAccounts:
          type: array
          items:
            $ref: '#/components/schemas/CreditReportAccountReport'
        installmentAccounts:
          type: array
          items:
            $ref: '#/components/schemas/CreditReportAccountReport'
        otherAccounts:
          type: array
          items:
            $ref: '#/components/schemas/CreditReportAccountReport'
        inquiries:
          type: array
          items:
            $ref: '#/components/schemas/InquiryReport'
        consumerStatements:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerStatementReport'
        publicRecords:
          $ref: '#/components/schemas/PublicRecordsReport'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/CollectionItemReport'
    CreditReportReport:
      type: object
      properties:
        providerViews:
          type: array
          items:
            $ref: '#/components/schemas/CreditReportProviderViewReport'
        id:
          type: string
        reportType:
          type: string
          enum:
            - US_EFX
            - US_3B
        generatedDate:
          type: string
          format: date-time
    CreditReportSummaryAccountsReport:
      type: object
      properties:
        balance:
          $ref: '#/components/schemas/MoneyReport'
        creditLimit:
          $ref: '#/components/schemas/MoneyReport'
        available:
          $ref: '#/components/schemas/MoneyReport'
        monthlyPaymentAmount:
          $ref: '#/components/schemas/MoneyReport'
        debtToCreditRatio:
          type: number
          format: double
        totalAccounts:
          type: integer
          format: int32
        totalNegativeAccounts:
          type: integer
          format: int32
        totalAccountsWithBalance:
          type: integer
          format: int32
    CreditReportSummaryReport:
      type: object
      properties:
        id:
          type: string
        reportGenerated:
          type: string
          format: date-time
        creditFileSecurityFreezeFlag:
          type: boolean
        reportType:
          type: string
          enum:
            - US_EFX
            - US_3B
        provider:
          type: string
          enum:
            - EFX
            - TU
            - EXP
            - UNKNOWN
        subject:
          $ref: '#/components/schemas/PersonSubjectReport'
        creditScore:
          $ref: '#/components/schemas/CreditScoreReport'
        revolvingAccounts:
          $ref: '#/components/schemas/CreditReportSummaryAccountsReport'
        mortgageAccounts:
          $ref: '#/components/schemas/CreditReportSummaryAccountsReport'
        installmentAccounts:
          $ref: '#/components/schemas/CreditReportSummaryAccountsReport'
        otherAccounts:
          $ref: '#/components/schemas/CreditReportSummaryAccountsReport'
        totalOpenAccounts:
          $ref: '#/components/schemas/CreditReportSummaryAccountsReport'
        lengthOfCreditHistoryMonths:
          type: integer
          format: int32
        totalNegativeAccounts:
          type: integer
          format: int32
        averageAccountAgeMonths:
          type: integer
          format: int32
        oldestAccountOpenDate:
          type: string
          format: date-time
        oldestAccountName:
          type: string
        mostRecentAccountOpenDate:
          type: string
          format: date-time
        mostRecentAccountName:
          type: string
        totalConsumerStatements:
          type: integer
          format: int32
        mostRecentInquiryDate:
          type: string
          format: date-time
        mostRecentInquiryName:
          type: string
        totalPersonalInformation:
          type: integer
          format: int32
        totalInquires:
          type: integer
          format: int32
        totalPublicRecords:
          type: integer
          format: int32
        totalCollections:
          type: integer
          format: int32
        disputeInformation:
          $ref: '#/components/schemas/CreditReportProviderDisputeInformationReport'
    CreditScoreLoanRiskRangeReport:
      type: object
      properties:
        low:
          type: integer
          format: int32
        high:
          type: integer
          format: int32
        name:
          type: string
    CreditScoreRangeReport:
      type: object
      properties:
        low:
          type: integer
          format: int32
        high:
          type: integer
          format: int32
        name:
          type: string
    CreditScoreReasonReport:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        creditScoreFactorEffect:
          type: string
          enum:
            - HELPING
            - HURTING
            - NEUTRAL
    CreditScoreReport:
      type: object
      properties:
        score:
          type: integer
          format: int32
        provider:
          type: string
          enum:
            - EFX
            - TU
            - EXP
            - UNKNOWN
        scoreRanges:
          type: array
          items:
            $ref: '#/components/schemas/CreditScoreRangeReport'
        loanRiskRanges:
          type: array
          items:
            $ref: '#/components/schemas/CreditScoreLoanRiskRangeReport'
        scoreReasons:
          type: array
          items:
            $ref: '#/components/schemas/CreditScoreReasonReport'
    EmployerReport:
      type: object
      properties:
        employerName:
          type: string
        employeeTitle:
          type: string
        currentEmployer:
          type: boolean
        ordinal:
          type: integer
          format: int32
        dateOfEmployment:
          type: string
          format: date-time
        address:
          $ref: '#/components/schemas/InternationalAddressReport'
    InquiryReport:
      type: object
      properties:
        provider:
          type: string
          enum:
            - EFX
            - TU
            - EXP
            - UNKNOWN
        id:
          type: string
        type:
          type: string
          enum:
            - HARD
            - SOFT
            - OTHER
        prefix:
          $ref: '#/components/schemas/CodeDescriptionReport'
        reportedDate:
          type: string
          format: date-time
        contactInformation:
          $ref: '#/components/schemas/ContactInformationReport'
    InternationalAddressReport:
      type: object
      properties:
        country:
          $ref: '#/components/schemas/CountryReport'
        line1:
          type: string
        line2:
          type: string
        line3:
          type: string
        line4:
          type: string
        line5:
          type: string
        firstReportedDate:
          type: string
          format: date-time
        lastReportedDate:
          type: string
          format: date-time
        phone:
          $ref: '#/components/schemas/InternationalPhoneReport'
    InternationalPhoneReport:
      type: object
      properties:
        countryCode:
          type: string
        areaCode:
          type: string
        exchange:
          type: string
        extension:
          type: string
    JudgmentReport:
      type: object
      properties:
        id:
          type: string
        filedDate:
          type: string
          format: date-time
        reportedDate:
          type: string
          format: date-time
        courtName:
          type: string
        defendant:
          type: string
        amount:
          $ref: '#/components/schemas/MoneyReport'
        caseDocumentNumber:
          type: string
        plaintiff:
          type: string
        verifiedDate:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/CodeDescriptionReport'
        satisfiedDate:
          type: string
          format: date-time
    LienReport:
      type: object
      properties:
        id:
          type: string
        filedDate:
          type: string
          format: date-time
        reportedDate:
          type: string
          format: date-time
        courtName:
          type: string
        caseDocumentNumber:
          type: string
        lienAmount:
          $ref: '#/components/schemas/MoneyReport'
        verifiedDate:
          type: string
          format: date-time
        status:
          type: string
    MoneyReport:
      type: object
      properties:
        amount:
          type: number
          format: double
        currency:
          type: string
          enum:
            - USD
            - CAD
            - GBP
    PaymentHistoryMonthReport:
      type: object
      properties:
        monthType:
          type: string
          enum:
            - NO_DATA
            - NEGATIVE
            - POSITIVE
            - COLLECTION
            - NEW_ACCOUNT
            - BANKRUPTCY
            - FORECLOSURE
            - VOLUNTARY_SURRENDER
            - REPOSSESSION
            - CHARGE_OFF
            - COLLECTION_CHARGEOFF
        value:
          type: string
          enum:
            - PAYS_AS_AGREED
            - DAYSLATE_30
            - DAYSLATE_60
            - DAYSLATE_90
            - DAYSLATE_120
            - DAYSLATE_150
            - DAYSLATE_180
            - TOO_NEW_TO_RATE
            - BANKRUPTCY
            - COLLECTION
            - FORECLOSURE
            - VOLUNTARY_SURRENDER
            - REPOSSESSION
            - CHARGE_OFF
            - COLLECTION_CHARGEOFF
            - ZERO_BAL_AND_CURR_ACCT
            - NOT_REPORTED
            - UNAVAILABLE
    PaymentHistoryYearReport:
      type: object
      properties:
        year:
          type: integer
          format: int32
        january:
          $ref: '#/components/schemas/PaymentHistoryMonthReport'
        february:
          $ref: '#/components/schemas/PaymentHistoryMonthReport'
        march:
          $ref: '#/components/schemas/PaymentHistoryMonthReport'
        april:
          $ref: '#/components/schemas/PaymentHistoryMonthReport'
        may:
          $ref: '#/components/schemas/PaymentHistoryMonthReport'
        june:
          $ref: '#/components/schemas/PaymentHistoryMonthReport'
        july:
          $ref: '#/components/schemas/PaymentHistoryMonthReport'
        august:
          $ref: '#/components/schemas/PaymentHistoryMonthReport'
        september:
          $ref: '#/components/schemas/PaymentHistoryMonthReport'
        october:
          $ref: '#/components/schemas/PaymentHistoryMonthReport'
        november:
          $ref: '#/components/schemas/PaymentHistoryMonthReport'
        december:
          $ref: '#/components/schemas/PaymentHistoryMonthReport'
    PersonNameReport:
      type: object
      properties:
        lastName:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        suffix:
          type: string
    PersonSubjectReport:
      type: object
      properties:
        provider:
          type: string
          enum:
            - EFX
            - TU
            - EXP
            - UNKNOWN
        currentName:
          $ref: '#/components/schemas/PersonNameReport'
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/PersonNameReport'
        currentAddress:
          $ref: '#/components/schemas/InternationalAddressReport'
        previousAddresses:
          type: array
          items:
            $ref: '#/components/schemas/InternationalAddressReport'
        homePhone:
          $ref: '#/components/schemas/InternationalPhoneReport'
        mobilePhone:
          $ref: '#/components/schemas/InternationalPhoneReport'
        nationalIdentifier:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        dateOfDeath:
          type: string
          format: date-time
        employmentHistory:
          type: array
          items:
            $ref: '#/components/schemas/EmployerReport'
    PublicRecordsReport:
      type: object
      properties:
        provider:
          type: string
          enum:
            - EFX
            - TU
            - EXP
            - UNKNOWN
        bankruptcies:
          type: array
          items:
            $ref: '#/components/schemas/BankruptcyReport'
        judgments:
          type: array
          items:
            $ref: '#/components/schemas/JudgmentReport'
        liens:
          type: array
          items:
            $ref: '#/components/schemas/LienReport'
    TrendedDataHistoryReport:
      type: object
      properties:
        name:
          type: string
        trendedDataList:
          type: array
          items:
            $ref: '#/components/schemas/TrendedDataReport'
    TrendedDataReport:
      type: object
      properties:
        name:
          type: string
        years:
          type: array
          items:
            $ref: '#/components/schemas/TrendedDataYearReport'
        labels:
          type: array
          items:
            type: string
    TrendedDataYearReport:
      type: object
      properties:
        year:
          type: string
        monthData:
          type: array
          items:
            type: string
    EfxConfigRespDTO:
      type: object
      properties:
        secret:
          type: string
        id:
          type: string
        url:
          type: string
    CreditMonitoringAlertAbstract:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - ACCOUNTNUMBERCHANGE
            - ADDRESS
            - BALANCEAMOUNT
            - BALANCEPERCENT
            - BANKRUPTCY
            - CHANGEVALUESCORE
            - COLLECTION
            - CRCACCESSWITHINVALIDPIN
            - CRCSTATEFREEZE
            - DORMANTMONTHS
            - GARNISHMENT
            - INQUIRY
            - LEGALITEM
            - MINIMUNLEVELSCORE
            - NAME
            - SCORECHANGE
            - TARGETSCORE
            - TAXLIEN
            - TRADELINE
            - BLOCKEDINQUIRY
            - HARDINQUIRY
            - UNKNOWN
        category:
          type: string
        name:
          type: string
        description:
          type: string
        dateReported:
          type: string
          format: date-time
        provider:
          type: string
          enum:
            - EFX
            - EXP
            - TU
            - UNKNOWN
        postedDuringMaintenancePeriod:
          type: boolean
    DataSelectorResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        title:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/PairStringString'
    PairStringString:
      type: object
      properties:
        first:
          type: string
        second:
          type: string
    AlertRespDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        alertId:
          type: string
        alertType:
          type: string
        creationDate:
          type: string
          format: date-time
        dataSource:
          type: string
        dateReported:
          type: string
          format: date-time
        reportingFrequency:
          type: string
        institutionType:
          type: string
        institutionName:
          type: string
        inquiryIntent:
          type: string
        inquiryType:
          type: string
        endUserText:
          type: string
        institutionAddressLine1:
          type: string
        institutionAddressLine2:
          type: string
        institutionCity:
          type: string
        institutionState:
          type: string
        institutionPostalCode:
          type: string
        institutionPhoneNumber:
          type: string
        postedDuringMaintenancePeriod:
          type: boolean
    DetailedCustomerEntry:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
          format: uuid
        active:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        userCount:
          type: integer
          format: int32
        lastActive:
          type: string
          format: date-time
        contactEmail:
          type: string
        billing:
          type: boolean
        contactName:
          type: string
        refId:
          type: string
        userLimit:
          type: integer
          format: int32
        minRate:
          type: number
          format: float
    PageableResponse:
      type: object
      properties:
        hasMore:
          type: boolean
        count:
          type: integer
          format: int32
        content:
          type: object
    CustomerStatsEntry:
      type: object
      properties:
        i:
          type: integer
          format: int32
        h:
          type: string
        c:
          type: integer
          format: int32
    CustomerStatsRespDTO:
      type: object
      properties:
        st:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomerStatsEntry'
    DetailedHostEntry:
      type: object
      properties:
        name:
          type: string
        key:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        host:
          type: string
        flags:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        active:
          type: boolean
        theme:
          type: string
        hookActive:
          type: boolean
        sendEmail:
          type: boolean
        sendSMS:
          type: boolean
        userCount:
          type: integer
          format: int32
        lastActive:
          type: string
          format: date-time
        customerName:
          type: string
        customerId:
          type: string
          format: uuid
        secret:
          type: string
          format: uuid
        userLimit:
          type: integer
          format: int32
        logo:
          type: string
        successUrl:
          type: string
        failureUrl:
          type: string
        rate:
          type: number
          format: float
        hook:
          type: string
        hookUser:
          type: string
        hookPass:
          type: string
    HostStatsEntry:
      type: object
      properties:
        i:
          type: integer
          format: int32
        c:
          type: integer
          format: int32
    HostStatsRespDTO:
      type: object
      properties:
        st:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        data:
          type: array
          items:
            $ref: '#/components/schemas/HostStatsEntry'
    BillingRespDTO:
      type: object
      properties:
        st:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        data:
          type: object
    EnrollmentFeatureResponse:
      type: object
      properties:
        type:
          type: string
        responseMessage:
          type: string
        status:
          type: string
        enrollmentId:
          type: string
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        responseCode:
          type: integer
          format: int32
    Feature:
      type: object
      properties:
        code:
          type: string
          enum:
            - ONE_B_SCORE
            - ONE_B_SCORE_ANNUAL_VP
            - ONE_B_REPORT
            - ONE_B_CREDIT_MONITORING
            - ONE_B_ADHOC_REPORT
            - ONE_B_ADHOC_SCORE
            - ONE_B_SCORE_RAW
            - ONE_B_REPORT_RAW
            - ONE_B_ALERTS_RAW
            - ONE_B_REAL_TIME_CREDIT_MONITORING
            - ONE_B_ADHOC_REPORT_OFFLINE
            - ONE_B_ADHOC_SCORE_OFFLINE
            - ONE_B_CREDIT_MONITORING_OFFLINE
            - ONE_B_ADHOC_SCORE_ALT_001
            - ONE_B_ADHOC_SCORE_ALT_001_OFFLINE
            - ONE_B_SCORE_HRL
            - ONE_B_SCORE_DLY
            - ONE_B_SCORE_WKL
            - ONE_B_SCORE_MON
            - ONE_B_SCORE_BWK
            - ONE_B_SCORE_BMT
            - ONE_B_SCORE_QRT
            - ONE_B_SCORE_SYR
            - ONE_B_SCORE_YRL
            - ONE_B_SCORE_BYR
            - ONE_B_REPORT_HRL
            - ONE_B_REPORT_DLY
            - ONE_B_REPORT_WKL
            - ONE_B_REPORT_MON
            - ONE_B_REPORT_BWK
            - ONE_B_REPORT_BMT
            - ONE_B_REPORT_QRT
            - ONE_B_REPORT_SYR
            - ONE_B_REPORT_YRL
            - ONE_B_REPORT_BYR
            - THREE_B_SCORE
            - THREE_B_REPORT
            - THREE_B_CREDIT_MONITORING
            - THREE_B_ADHOC_SCORE
            - THREE_B_ADHOC_REPORT
            - THREE_B_SCORE_RAW
            - THREE_B_REPORT_RAW
            - THREE_B_ALERTS_RAW
            - THREE_B_SCORE_ONE_B_RAW
            - THREE_B_REPORT_ONE_B_RAW
            - THREE_B_ADHOC_REPORT_OFFLINE
            - THREE_B_ADHOC_SCORE_OFFLINE
            - THREE_B_CREDIT_MONITORING_OFFLINE
            - THREE_B_ADHOC_REPORT_ALT_001
            - THREE_B_ADHOC_REPORT_ALT_001_OFFLINE
            - THREE_B_SCORE_HRL
            - THREE_B_SCORE_DLY
            - THREE_B_SCORE_WKL
            - THREE_B_SCORE_MON
            - THREE_B_SCORE_BWK
            - THREE_B_SCORE_BMT
            - THREE_B_SCORE_QRT
            - THREE_B_SCORE_SYR
            - THREE_B_SCORE_YRL
            - THREE_B_SCORE_BYR
            - THREE_B_REPORT_HRL
            - THREE_B_REPORT_DLY
            - THREE_B_REPORT_WKL
            - THREE_B_REPORT_MON
            - THREE_B_REPORT_BWK
            - THREE_B_REPORT_BMT
            - THREE_B_REPORT_QRT
            - THREE_B_REPORT_SYR
            - THREE_B_REPORT_YRL
            - THREE_B_REPORT_BYR
            - CONSUMER_DATA
            - CREDIT_LOCK
            - NCTUE_MONITORING
            - CHILD_LOCK
            - TRANSUNION_LOCK
        description:
          type: string
    UserStatsEntry:
      type: object
      properties:
        i:
          type: integer
          format: int32
        h:
          type: string
        c:
          type: integer
          format: int32
    UserStatsRespDTO:
      type: object
      properties:
        st:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserStatsEntry'
    ActiveUserStatsEntry:
      type: object
      properties:
        h:
          type: string
        c:
          type: integer
          format: int32
    CloseRespDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        accountsClosed:
          type: integer
          format: int32
  securitySchemes:
    accessToken:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
#DOCUMENTATION ===============================================
- name: StitchCredit B2B APIs
  description: |

- name: Overview of APIs
  description: |
        StitchCredit APIs support both JSON and XML requests as well as JSON and XML responses. 
        For details of the APIs, refer to the endpoints and request/response models in this section.
        <hr>

- name: Quickstart
  description: |
        <h2>Before you start</h2>
        <p>
        We provide you with a host configuration for our development server and a demo user's identity in a <a href="https://www.postman.com/">Postman</a> environment.
        </p>
        <p>
        To quickly grasp the token flow and sequence of API calls, download and import the "Getting Started" <a href="/tag/Postman-Collections">Postman Collections</a> from the <a href="https://drive.google.com/drive/folders/1VU0awRVnOswE1e9srB_tJ7nBxqUZFN2-?usp=sharing" target="_blank">Google Drive</a> and the Postman environment we provided to you.<br>
        The <a href="https://drive.google.com/drive/folders/1VU0awRVnOswE1e9srB_tJ7nBxqUZFN2-?usp=sharing" target="_blank">Google Drive</a> and this documentation contain <a href="/tag/Postman-Collections">Postman Collections</a> for each API.
        </p>
        <p>
        <ul>
          <li><em><strong><a href="/tag/Direct-API">Direct API</a></strong> calls must originate from your server</em> </li>
          <li><em><strong><a href="/tag/Direct-API">User API</a></strong> calls must originate from the end-client</em> </li>
          <li><em><strong><a href="/tag/Equifax-API">Equifax API</a></strong> calls must originate from the end-client</em> </li>
        </ul>
        Equifax end-points are accessible by first using the <a href="/tag/Direct-API">User API</a> <strong>/users/efx-config</strong> response data, and then the Equifax <strong>/oauth/token</strong> call. As mentioned above, <strong><a href="/tag/Direct-API">User API</a></strong> and <strong><a href="/tag/Equifax-API">Equifax API</a></strong> calls are intended to be called from the end-client/user's device.
        </p>
        <p>
        It is not acceptable to pass any of the data to these calls or responses from these calls to your server. Do not save any data. Short term caching is fine, but long-term storage is not. 
        </p>
        <hr>
        <h2>How it works</h2>
        <p>
        With StitchCredit's Consumer Credit API, you can offer Consumer Credit Scores and Credit Monitoring directly as part of your web or mobile experience.
        </p>
        <p>
        It's easy to add Credit Score & Reports to your existing customer experience by embedding our code into your HTML doc, page or website.
        </p>
        <hr>
        <h2>Getting started</h2>
        <p>First, let's determine the way in which you will interact with the consumer credit APIs. This will determine the type of integration that you require and how to implement the integration pattern.</p>
        <hr>
        <h2>Which Integration Option is right for you</h2>
        <p>
        This guide is to help you choose the integration option for the Consumer Credit widget, web integration and/or API. 
        </p>
        <ol>
          <li>Usage of credit reporting on a web page with user authentication managed by StitchCredit%#58; <a href="/tag/Web-Widget-with-Integrated-Authentication">Web Widget with Integrated Authentication</a></li>
          <li>Usage of credit reporting on a web page with user authentication managed by you%#58; <a href="/tag/Web-Integration-with-Custom Authentication">Web Integration with Custom Authentication</a></li>
          <li>Usage of credit reporting on a custom UI such as a website or mobile app with authentication managed on the website/in the app%#58; <a href="/tag/API-Integration-for-Custom-Web-or-Mobile-App">API Integration for Custom Web or Mobile App</a></li>
        </ol>
        <p>
        <strong>FIRST</strong>%#58; Are you integrating the StitchCredit widget into a web page?
        </p>
        <p>
        Either we can manage users or you can.
        </p>
        <ul>
        <li>
        If we are managing users, then your users register for a StitchCredit account through the widget's registration and identity verification screens. Then, users log into the widget with an email and password after having already logged into your service. (Option 1 - <a href="/tag/Web-Widget-with-Integrated-Authentication">Web Widget with Integrated Authentication</a>).
        </li>
        <li>
        If you are managing users, then they do not log in through the widget. Instead, you create your own registration screen utilizing our API. You can also create your own screens for the identity verification process (SMS one-time-code and identity quiz questions). You can merge the StitchCredit registration & identity process with your own service's registration, but you have to adhere to the compliance guide for screens. (Option 2 - <a href="/tag/Web-Integration-with-Custom Authentication">Web Integration with Custom Authentication</a>)
        </li>
        </ul>
        <p>
        <strong>OTHERWISE</strong>%#58; The 3rd Integration option is for customers who want to create their own UI, such as a website or mobile app, entirely using the StitchCredit Consumer Credit API. User authentication is managed by the website or in the app.
        </p>
        <p>
        All custom screens created using the API require Equifax approval (see the compliance guide for approval guidelines). (Option 3 - <a href="/tag/API-Integration-for-Custom-Web-or-Mobile-App>API Integration for Custom Web or Mobile App"</a>)<br>
        </p>
        <h3>Web Widget with Integrated Authentication</h3>
          <p>
          For this option, you embed an iframe and configure the Host URL where you will be loading the widget. The StitchCredit widget can be customized to represent your look and feel in order to strengthen your relationship with customers.
          </p>
          <p>
          For testing, StitchCredit can configure that any Host URL to load the widget (including localhost); this allows you to try this integration option by locally serving an html file with the following iframe. For production, the URL must be locked down so that the widget can only be rendered from that host. 
          </p>
          <p>
          More information can be found in section <a href="/tag/Web-Widget-with-Integrated-Authentication">Web Widget with Integrated Authentication</a>.
          </p>
        <h3>Web Integration with Custom Authentication</h3>
          <p>
          This option does not require users to log in through the widget. Instead, you create a registration screen utilizing the StitchCredit Consumer Credit API. 
          </p>
          <p>
          You can have screens for the identity verification process  for SMS one-time-code and identity quiz questions. Also, it is possible to merge the StitchCredit registration/identity process with your own service's registration, as long as you follow the compliance guide for these screens. 
          </p>
          <p>
          The html <a href="#item-3-3-9">Sample files</a> in the documentation demonstrate the different views for this integration option. 
          </p>
          <p>
          More information can be found in section <a href="/tag/Web-Integration-with-Custom Authentication">Web Integration with Custom Authentication</a>.
          </p>
        <h3>API Integration for Custom Web or Mobile App</h3>
          <p>
          The 3rd Integration option is for customers who want to create their own UI, such as a website or mobile app, entirely using the StitchCredit Consumer Credit API. User authentication is managed by the website or in the app.
          </p>
          <p>
          With this option, you can create your own user experience for connecting your users to their credit data by leveraging the same B2C API that the widget is utilizing.
          </p>
          <p>
          More information can be found in section <a href="/tag/API-Integration-for-Custom-Web-or-Mobile-App">API Integration for Custom Web or Mobile App</a>.
          </p>
        <hr>
        <h2>Next Steps</h2>
        <p>
        Once you've decide on <a href="#item-2-4">which integration option</a> is right for your use case, then it's a question of understanding how to implement the integration by looking at our samples and API guides below.
        </p>
        <hr>


- name: direct-controller
  description: |
        <p>
        <em><strong>Direct API</strong> calls must originate from your server</em>
        </p>
        <p>
        A token from /direct/login is required for all other <a href="/tag/TODO">Direct API</a> end-points. It is a bearer authorization token.
        </p>
        <p>
        Once you have a preauth token, returned from /direct/user-reg or /direct/preauth-token, pass it to the Web UI entry point in the embedded iFrame.
        </p>
        <p>
        Be sure to <strong>save the ID</strong> returned from /direct/user-reg or you won’t be able to reauthorize the user when they return.
        </p>
        <p>
        **<em>The preauth token is only valid for 30 seconds</em>
        </p>
        <h3>Endpoints</h3>
          <p>
          <div style="display: table; clear: both; width: 80%;">
            <div style="float: left; width: 50%;">
              Customer Login
            </div>
            <div style="float: left; width: 50%;">
              /direct/login
            </div>
          </div>
          <div style="display: table; clear: both; width: 80%;">
            <div style="float: left; width: 50%;">
              Register New User
              <br>
              New User Token
              <br>
              Change Email
              <br>
              Change Phone
              <br>
              Close Account
              <br>
              Update Refresh
              <br>
            </div>
            <div style="float: left; width: 50%;">
              /direct/user-reg
              <br>
              /direct/preauth-token
              <br>
              /direct/change-email
              <br>
              /direct/change-phone
              <br>
              /direct/close-account
              <br>
              /direct/update-refresh [PREMIUM FEATURE]
              <br>
            </div>
          </div>
          </p>
          <p>Collection of end-points that should be called from your server.</p>
          <ol>
            <h4><li>Customer Login (POST)</h4>
            <p>/direct/login</p>
              <p>Using your credentials in the request body ("apikey" and "secret"), the response will contain the <em>token</em> and <em>refresh</em> token.<br>
              These tokens are required for completing the other requests to <strong>Direct API</strong> endpoints.<br></p>
              <p>This token will be valid for approximately one hour. After the one hour, the refresh token will become valid. <br></p>
              <p>If the token expires, use <strong>/direct/refresh-token?token={<em>refresh</em>}</strong> to get a new token <br></p>
              <br>
            <br>
            </li>
            <h4><li>CUSTOMER REFRESH TOKEN (GET)</h4>
            <p>/direct/refresh-token</p>
              <p>
              Token and refresh tokes are required for completing the other requests to Direct API endpoints.
              </p>
              <p>
              The token will be valid for approximately one hour. After the one hour, the refresh token will become valid.
              </p>
              <p>
              When the token expires, use /direct/refresh-token?token={refresh} to get a new token
              </p>
            </li>
            <h4><li>REGISTER NEW USER (POST)</h4>
            <p>/direct/user-reg</p>
            <p>Creates a new user with unique <strong>userId</strong> and <strong>preauth token</strong>.<br></p>
            <p>When a user logs back in, use <strong>/direct/preauth-token/{userId}</strong> to generate that user a new <strong>preauth token</strong> and a new <strong>userId</strong> (refer to <strong>Returning User</strong>)</p>
            <p>Don't store the token across sessions. Use the userId from the previous session to generate a new userId and a new preauth token.</p>
            </li>
            <h4><li>NEW USER TOKEN (GET)</h4>
            <p>/direct/preauth-token/{userId}</p>
            </li>
            <h4><li>CLOSE USER ACCOUNT (POST)</h4>
            <p>/direct/close-account/{userId}</p>
            </li>
            <h4><li>CHANGE USER EMAIL (POST)</h4>
            <p>/direct/change-email/{userId}</p>
            </li>
            <h4><li>CHANGE USER PHONE (POST)</h4>
            <p>/direct/change-mobile/{userId}</p>
            </li>
            <h4><li>CHANGE USER HOST (POST)</h4>
            <p>/direct/change-host/{userId}</p>
            </li>
            <h4><li>UPDATE USER REFRESH DATA (POST)</h4>
            <p>/direct/update-refresh/{userId}</p>
            <p><strong>*Premium Feature - May Require Additional Access</strong></p>
            </li>
            <h4><li>GET ALERT DETAIL (GET)</h4>
            <p>/direct/efx-alert/{alertId}</p>
            <p><strong>*Premium Feature - May Require Additional Access</strong></p>
            </li>
          </ol>

- name: Experian
  description: |
      REST API for Experian data

- name: Transunion
  description: |
      REST API for Transunion data

- name: LexisNexis
  description: |
      REST API for LexisNexis

- name: PitchPoint
  description: |
      REST API for PitchPoint data

- name: Criminal
  description: |
      REST API for Criminal data

- name: Eviction
  description: |
      REST API for Eviction data

- name: User
  description: |
        REST API for MWARE users

- name: Overview of APIs Under Development
  description: |
        These APIs are currently <em><strong>under development</strong></em> by StitchCredit. You can expect that they will be available soon. If the functionality that is described interests you, please let us know and we can discuss its availability.
        <hr>

- name: Sandbox
  description: |
        <p>The Sandbox is a free and fully-featured environment for application development and testing. All functionality of the StitchCredit B2B APIs is supported in the Sandbox environment. A variety of scenarios are available to test against, and you can create an unlimited number of test items.</p>
        <p>Sandbox API information has been provided to you as a Postman Collection.</p>
        <h2>Usage</h2>
        <p><a href="/tag/Postman-Collection">Postman Collections</a> for StitchCredit B2B APIs include pre-defined API calls to help you understand and develop your solution. </p>
        <p>To quickly grasp the flow and sequence of API calls, download and import the Postman Collections the Postman environment we provided to you.</p>
        <hr>
        <h2>Credentials</h2>
        <p>Access Credentials have been sent to you in a Postman Environment upon registration . The Postman Environment is pre-configured to allow you to use the scripts and walk through the Postman Scripts with minimal intervention to aid in understanding the API call structure.</p>
        <hr>
        <h2>Testing</h2>
        <p>It is important to note that some APIs are available <em><strong>only</strong></em> in the <strong>test</strong> environment.</p>
        <hr>


- name: Swagger Documentation
  description: |
        <p><a href="https://mware-dev.crscreditapi.com/api/swagger-ui/index.html?configUrl=/api/mware-docs/swagger-config#/" target="_blank">Swagger documentation</a> is available, but you will find <a href="/tag/Overview-of-APIs">descriptions of all APIs</a> within this document.</p>

- name: Postman Collection
  description: |
        <p><strong>Testing StitchCredit Dev Server - anonymized.postman_collection.json</strong></p> <!-- Postman Collections -->
        <p><a href="https://api.redoc.ly/registry/assets/crs-group/B2B/v1/assets%2FTesting%20StitchCredit%20Dev%20Server%20-%20anonymized.postman_collection.json" download>Download here</a></p>
        <div class="postman_code" style="max-height: 60vh;overflow: scroll;" onload="doHighlight();">
        <!-- Testing StitchCredit Dev Server - anonymized.postman_collection.json -->
        <pre><code class="language-json json">

        </code></pre>
        </div>
        <hr>

- name: Security
  description: |
        <p>We regularly audit the security details of our implementation, including our certificates. We ensure that consumers and servers interact with StitchCredit APIs over HTTPS.</p>
        <p>TODO</p>
        <hr>

############### x-tags: what to show, where
 x-tagGroups:
  - name: Quickstart
    tags:
      - Before You Start
      - How it Works
      - Getting Started
      - Which Integration Options is Right For You
      - Next Steps
     
  - name: Developer Tools
    tags:
      - Overview of Developer Tools
      - Web Widget with Integrated Authentication
      - Web Integration with Custom Authentication
      - API Integration for Custom Web or Mobile App
      - SDKs (under development)
      - Consumer Credit API Setup
      - Postman Collections
      
  - name: Integration Methods
    tags:      
      - Overview of Integration Methods
      - Webhook Integration
      - Web Messaging Integration
      - APIs

   - name: APIs
     tags:  
       - Overview of APIs
       - direct-controller
      
  - name: In addition
    tags:      
      - Sandbox
      - Security

