{
	"info": {
		"_postman_id": "78ea84a5-dd24-48c3-872a-2654e894b062",
		"name": "StitchCredit - User API",
		"description": "User API calls must originate from the end-client.\r\n\r\nEquifax end-points are accessible by first using the User API /users/efx-config response data, and then the Equifax /oauth/token call.\r\n\r\nUser API and Equifax API calls are intended to be called from the end-client/user's device.\r\n\r\nThe Consumer Credit - User API.postman_collection.json provides all User-oriented APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Preauth Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "370399eb-c2d3-4d02-b5e6-28e4cd217059",
						"exec": [
							"var data = pm.response.json();\r",
							"if (data) {\r",
							"    if (data.token) pm.environment.set(\"utoken\", data.token);\r",
							"    if (data.refresh) pm.environment.set(\"rutoken\", data.refresh);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}{{BASE_URL}}/users/preauth-token/{{paToken}}",
					"protocol": "{{PROTOCOL}}",
					"host": [
						"{{HOST}}"
					],
					"port": "{{PORT}}{{BASE_URL}}",
					"path": [
						"users",
						"preauth-token",
						"{{paToken}}"
					]
				},
				"description": "This request uses userId (from the response of /direct/user-reg) to generate a User Token.\r\n\r\nThe Preauth Token needed for this request is also generated by /direct/user-reg or /direct/preauth-token"
			},
			"response": []
		},
		{
			"name": "User Refresh Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c3d8c071-4aa5-4622-ac58-0a2597c34f87",
						"exec": [
							"var data = pm.response.json();",
							"if(data) {",
							"    if(data.token) pm.environment.set(\"utoken\",data.token);",
							"    if(data.refresh) pm.environment.set(\"rutoken\",data.refresh);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "",
						"type": "text",
						"value": "",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}{{BASE_URL}}/users/refresh-token?token={{rutoken}}",
					"protocol": "{{PROTOCOL}}",
					"host": [
						"{{HOST}}"
					],
					"port": "{{PORT}}{{BASE_URL}}",
					"path": [
						"users",
						"refresh-token"
					],
					"query": [
						{
							"key": "token",
							"value": "{{rutoken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User Identity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c3d8c071-4aa5-4622-ac58-0a2597c34f87",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{utoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"ssn\":\"{{USER_SSN}}\",\"dob\":\"{{USER_DOB}}\",\"mobile\":\"{{USER_MOBILE}}\",\"street1\":\"{{USER_STREET1}}\",\"street2\":\"{{USER_STREET2}}\",\"city\":\"{{USER_CITY}}\",\"state\":\"{{USER_STATE}}\",\"zip\":\"{{USER_ZIP}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}{{BASE_URL}}/users/identity",
					"protocol": "{{PROTOCOL}}",
					"host": [
						"{{HOST}}"
					],
					"port": "{{PORT}}{{BASE_URL}}",
					"path": [
						"users",
						"identity"
					]
				},
				"description": "This endpoint is most useful for checking whether the user's identity needs to be verified.\r\n\r\nIf the response has idpass set to true, then the user's identity is already verified.\r\n\r\nIf idpass is false, then the user's identity needs to be verified.\r\n\r\nThe user's identity can be verified with either:\r\n\r\n/users/get-mobile (phone sms verification)  \r\n/users/get-quiz (an identity quiz)  \r\nThe user's identity must be verified in order to enable the user's device to request the Equifax config data.\r\n\r\nThe data in the Equifax config provides the necessary credentials for making requests to the Equifax API from the consumer's device."
			},
			"response": []
		},
		{
			"name": "Phone Verify",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c3d8c071-4aa5-4622-ac58-0a2597c34f87",
						"exec": [
							"var data = pm.response.json();",
							"pm.environment.set(\"mtoken\",data.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{utoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}{{BASE_URL}}/users/get-mobile",
					"protocol": "{{PROTOCOL}}",
					"host": [
						"{{HOST}}"
					],
					"port": "{{PORT}}{{BASE_URL}}",
					"path": [
						"users",
						"get-mobile"
					]
				},
				"description": "Using the Phone Verify, Send Mobile Code, Verify Mobile Code method, the code in the test system passes through, so you can just keep clicking the send on those functions, though you will receive the text as well."
			},
			"response": []
		},
		{
			"name": "Send Mobile Code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c3d8c071-4aa5-4622-ac58-0a2597c34f87",
						"exec": [
							"var data = pm.response.json();",
							"pm.environment.set(\"mTransactionKey\",data.key);",
							"pm.environment.set(\"passcode\",data.passcode);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{utoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}{{BASE_URL}}/users/send-code/{{mtoken}}",
					"protocol": "{{PROTOCOL}}",
					"host": [
						"{{HOST}}"
					],
					"port": "{{PORT}}{{BASE_URL}}",
					"path": [
						"users",
						"send-code",
						"{{mtoken}}"
					]
				},
				"description": "Using the Phone Verify, Send Mobile Code, Verify Mobile Code method, the code in the test system passes through, so you can just keep clicking the send on those functions, though you will receive the text as well."
			},
			"response": []
		},
		{
			"name": "Renew Mobile Code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c3d8c071-4aa5-4622-ac58-0a2597c34f87",
						"exec": [
							"var data = pm.response.json();",
							"pm.environment.set(\"mTransactionKey\",data.key);",
							"pm.environment.set(\"passcode\",data.passcode);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{utoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"key\":\"{{mTransactionKey}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}{{BASE_URL}}/users/renew-code",
					"protocol": "{{PROTOCOL}}",
					"host": [
						"{{HOST}}"
					],
					"port": "{{PORT}}{{BASE_URL}}",
					"path": [
						"users",
						"renew-code"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Mobile Code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c3d8c071-4aa5-4622-ac58-0a2597c34f87",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{utoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"key\":\"{{mTransactionKey}}\",\"code\":\"{{passcode}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}{{BASE_URL}}/users/verify-code",
					"protocol": "{{PROTOCOL}}",
					"host": [
						"{{HOST}}"
					],
					"port": "{{PORT}}{{BASE_URL}}",
					"path": [
						"users",
						"verify-code"
					]
				},
				"description": "Using the Phone Verify, Send Mobile Code, Verify Mobile Code method, the code in the test system passes through, so you can just keep clicking the send on those functions, though you will receive the text as well."
			},
			"response": []
		},
		{
			"name": "Get Identity Quiz",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c3d8c071-4aa5-4622-ac58-0a2597c34f87",
						"exec": [
							"var data = pm.response.json();",
							"pm.environment.set(\"qTransactionKey\",data.key);",
							"pm.environment.set(\"qzId\",data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{utoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}{{BASE_URL}}/users/get-quiz",
					"protocol": "{{PROTOCOL}}",
					"host": [
						"{{HOST}}"
					],
					"port": "{{PORT}}{{BASE_URL}}",
					"path": [
						"users",
						"get-quiz"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Identity Quiz",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c3d8c071-4aa5-4622-ac58-0a2597c34f87",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{utoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"key\":\"{{qTransactionKey}}\",\"id\":\"{{qzId}}\",\"answers\": [{\"qid\":1,\"aid\":3},{\"qid\":2,\"aid\":3},{\"qid\":3,\"aid\":3}]}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}{{BASE_URL}}/users/verify-quiz",
					"protocol": "{{PROTOCOL}}",
					"host": [
						"{{HOST}}"
					],
					"port": "{{PORT}}{{BASE_URL}}",
					"path": [
						"users",
						"verify-quiz"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get EFX Config",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c3d8c071-4aa5-4622-ac58-0a2597c34f87",
						"exec": [
							"var data = pm.response.json();",
							"pm.environment.set(\"efx_url\",data.url);",
							"pm.environment.set(\"efx_api_key\",data.id);",
							"pm.environment.set(\"efx_assertion\",data.secret);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{utoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}{{BASE_URL}}/users/efx-config",
					"protocol": "{{PROTOCOL}}",
					"host": [
						"{{HOST}}"
					],
					"port": "{{PORT}}{{BASE_URL}}",
					"path": [
						"users",
						"efx-config"
					]
				},
				"description": "Use this endpoint to get the Equifax credentials and url\r\n\r\nThese will be needed for the consumer app to send requests to the Equifax API."
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}